// <auto-generated />
using System;
using Data.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(MiDbContext))]
    [Migration("20241012140344_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.DataBase.Tables.Categoria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("categorias");

                    b.HasData(
                        new
                        {
                            id = 1,
                            estado = false,
                            nombre = "Computadoras"
                        },
                        new
                        {
                            id = 2,
                            estado = false,
                            nombre = "Laptops"
                        },
                        new
                        {
                            id = 3,
                            estado = false,
                            nombre = "Auriculares"
                        },
                        new
                        {
                            id = 4,
                            estado = false,
                            nombre = "Teclado"
                        },
                        new
                        {
                            id = 5,
                            estado = false,
                            nombre = "Componentes"
                        },
                        new
                        {
                            id = 6,
                            estado = false,
                            nombre = "Monitores"
                        });
                });

            modelBuilder.Entity("Data.DataBase.Tables.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RSocial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("id_clienteDireccion")
                        .HasColumnType("int");

                    b.Property<int>("id_documento")
                        .HasColumnType("int");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id_clienteDireccion")
                        .IsUnique();

                    b.HasIndex("id_documento")
                        .IsUnique();

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("Data.DataBase.Tables.ClienteDireccion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("departamento")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("distrito")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("provincia")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("referencia")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("id");

                    b.ToTable("clienteDireccion");
                });

            modelBuilder.Entity("Data.DataBase.Tables.Compra", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("fechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<string>("idTipoDocEntrada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_estado")
                        .HasColumnType("int");

                    b.Property<int>("id_proveedor")
                        .HasColumnType("int");

                    b.Property<string>("metodoPago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("nroDocEntrada")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_estado");

                    b.HasIndex("id_proveedor");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("Data.DataBase.Tables.Delivery", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("Telefono")
                        .HasColumnType("bigint");

                    b.Property<int>("id_direccion")
                        .HasColumnType("int");

                    b.Property<int>("id_estado")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_direccion")
                        .IsUnique();

                    b.HasIndex("id_estado");

                    b.ToTable("delivery");
                });

            modelBuilder.Entity("Data.DataBase.Tables.DetalleCompra", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("cantidadComprada")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_compra")
                        .HasColumnType("int");

                    b.Property<int>("id_producto")
                        .HasColumnType("int");

                    b.Property<string>("porcentajeUtilidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("precioCosto")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.Property<decimal>("precioVenta")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.HasKey("id");

                    b.HasIndex("id_compra");

                    b.HasIndex("id_producto");

                    b.ToTable("detalleCompra");
                });

            modelBuilder.Entity("Data.DataBase.Tables.DetalleVenta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("id_producto")
                        .HasColumnType("int");

                    b.Property<int>("id_venta")
                        .HasColumnType("int");

                    b.Property<decimal>("impuestos")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.Property<decimal>("preioUnitario")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.HasKey("id");

                    b.HasIndex("id_producto");

                    b.HasIndex("id_venta")
                        .IsUnique();

                    b.ToTable("detalleVenta");
                });

            modelBuilder.Entity("Data.DataBase.Tables.Documento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("longitudDocumento")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("nroDocumento")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("documentos");
                });

            modelBuilder.Entity("Data.DataBase.Tables.EmpleadoTecnico", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("salario")
                        .HasColumnType("int");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("empleadoTecnico");
                });

            modelBuilder.Entity("Data.DataBase.Tables.Estado", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("estados");
                });

            modelBuilder.Entity("Data.DataBase.Tables.OrdenServicioTecnico", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("descripcionServicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("horaFin")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("horaInicio")
                        .HasColumnType("time");

                    b.Property<int>("id_cliente")
                        .HasColumnType("int");

                    b.Property<int>("id_empleadoTecnico")
                        .HasColumnType("int");

                    b.Property<decimal>("precioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("id_cliente");

                    b.HasIndex("id_empleadoTecnico");

                    b.ToTable("ordenServicioTecnico");
                });

            modelBuilder.Entity("Data.DataBase.Tables.Producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("UltPorcUtilidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("garantia")
                        .HasColumnType("int");

                    b.Property<int>("id_categoria")
                        .HasColumnType("int");

                    b.Property<string>("imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("marca")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("modelo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("precioVenta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_categoria");

                    b.ToTable("productos");

                    b.HasData(
                        new
                        {
                            id = 1,
                            descripcion = "B550M, SSD M.2 1TB, RAM 16GB",
                            garantia = 2,
                            id_categoria = 1,
                            imagen = "https://www.impacto.com.pe/storage/pc/sm/171570984947559.jpg",
                            marca = "AMD",
                            modelo = "Ryzen 7 5700G",
                            precioVenta = 3298.80m,
                            stock = 10
                        },
                        new
                        {
                            id = 2,
                            descripcion = "Tarjeta de Video RTX 3050, SSD M.2 1TB, RAM 16GB",
                            garantia = 2,
                            id_categoria = 1,
                            imagen = "https://www.impacto.com.pe/storage/pc/md/171589130599320.jpg",
                            marca = "Intel",
                            modelo = "Core I5 13400F",
                            precioVenta = 2170.50m,
                            stock = 30
                        },
                        new
                        {
                            id = 3,
                            descripcion = "Tarjeta de Video RTX 3060TI, SSD M.2 1TB, RAM 32GB",
                            garantia = 2,
                            id_categoria = 1,
                            imagen = "https://www.impacto.com.pe/storage/pc/sm/171570984947559.jpg",
                            marca = "AMD",
                            modelo = "Ryzen 9 5900X",
                            precioVenta = 4239.99m,
                            stock = 10
                        },
                        new
                        {
                            id = 4,
                            descripcion = "Tarjeta de Video RTX 4060, SSD M.2 1TB, RAM 32GB",
                            garantia = 2,
                            id_categoria = 1,
                            imagen = "https://www.impacto.com.pe/storage/pc/sm/171570984947559.jpg",
                            marca = "AMD",
                            modelo = "Ryzen 7 5700X",
                            precioVenta = 4198.50m,
                            stock = 10
                        },
                        new
                        {
                            id = 5,
                            descripcion = "Con Microfono, Control De Volumen, Almohadillas Suaves",
                            garantia = 1,
                            id_categoria = 3,
                            imagen = "https://www.impacto.com.pe/storage/pc/md/171572299747960.jpg",
                            marca = "Logitech",
                            modelo = "Lightspeed Rgb G733 Gaming",
                            precioVenta = 538.99m,
                            stock = 3
                        },
                        new
                        {
                            id = 6,
                            descripcion = "Inalambrico, Con Microfono, Control De Volumen, Almohadillas Suaves",
                            garantia = 1,
                            id_categoria = 3,
                            imagen = "https://www.impacto.com.pe/storage/products/sm/169099476727139.jpg",
                            marca = "Logitech",
                            modelo = "G Pro X Gaming",
                            precioVenta = 638.99m,
                            stock = 3
                        },
                        new
                        {
                            id = 7,
                            descripcion = "Inalambrico, Necro C/gris, Gaming Surrow 7.1, C/microfono, Entrada Jack",
                            garantia = 1,
                            id_categoria = 3,
                            imagen = "https://www.impacto.com.pe/storage/products/sm/168867107289840.jpg",
                            marca = "Gambyte ",
                            modelo = "Dark Templar",
                            precioVenta = 128.99m,
                            stock = 3
                        },
                        new
                        {
                            id = 8,
                            descripcion = "Inalambrico, Necro C/gris, Gaming Surrow 7.1, C/microfono, Entrada Jack",
                            garantia = 1,
                            id_categoria = 3,
                            imagen = "https://www.impacto.com.pe/storage/products/sm/168867107289840.jpg",
                            marca = "Gambyte ",
                            modelo = "Dark Templar",
                            precioVenta = 128.99m,
                            stock = 3
                        },
                        new
                        {
                            id = 9,
                            descripcion = "Color Negro, Gaming 5.1, Bluetooth 5.0, Con Microfono, Control De Volumen, Almohadillas Suaves",
                            id_categoria = 6,
                            imagen = "https://www.impacto.com.pe/storage/products/sm/169099387290344.jpg",
                            marca = "Gambyte",
                            modelo = "Soul",
                            precioVenta = 120.99m,
                            stock = 23
                        });
                });

            modelBuilder.Entity("Data.DataBase.Tables.Proveedor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("RSocial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RUC")
                        .HasColumnType("int");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("nombreContacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("telefono")
                        .HasColumnType("int");

                    b.Property<int>("telefonoContacto")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("proveedores");
                });

            modelBuilder.Entity("Data.DataBase.Tables.RecojoAlmacen", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dni")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("recojoAlmacen");
                });

            modelBuilder.Entity("Data.DataBase.Tables.Rol", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("Data.DataBase.Tables.TipoPago", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("telefono")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tipoPago");
                });

            modelBuilder.Entity("Data.DataBase.Tables.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("clave")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("estado")
                        .HasMaxLength(128)
                        .HasColumnType("bit");

                    b.Property<int>("id_cliente")
                        .HasColumnType("int");

                    b.Property<int>("id_rol")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_cliente")
                        .IsUnique();

                    b.HasIndex("id_rol");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Data.DataBase.Tables.Vendedor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("apellidoMaterno")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("apellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("fechaContratacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("salario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("vendedores");
                });

            modelBuilder.Entity("Data.DataBase.Tables.Venta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("fechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_cliente")
                        .HasColumnType("int");

                    b.Property<int>("id_delivery")
                        .HasColumnType("int");

                    b.Property<int>("id_recojoAlmacen")
                        .HasColumnType("int");

                    b.Property<int>("id_tipoPago")
                        .HasColumnType("int");

                    b.Property<int>("id_vendedor")
                        .HasColumnType("int");

                    b.Property<decimal>("totalVenta")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.HasKey("id");

                    b.HasIndex("id_cliente");

                    b.HasIndex("id_delivery")
                        .IsUnique();

                    b.HasIndex("id_recojoAlmacen");

                    b.HasIndex("id_tipoPago")
                        .IsUnique();

                    b.HasIndex("id_vendedor");

                    b.ToTable("ventas");
                });

            modelBuilder.Entity("Data.DataBase.Tables.Cliente", b =>
                {
                    b.HasOne("Data.DataBase.Tables.ClienteDireccion", null)
                        .WithOne()
                        .HasForeignKey("Data.DataBase.Tables.Cliente", "id_clienteDireccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.DataBase.Tables.Documento", null)
                        .WithOne()
                        .HasForeignKey("Data.DataBase.Tables.Cliente", "id_documento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.DataBase.Tables.Compra", b =>
                {
                    b.HasOne("Data.DataBase.Tables.Estado", null)
                        .WithMany()
                        .HasForeignKey("id_estado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.DataBase.Tables.Proveedor", null)
                        .WithMany()
                        .HasForeignKey("id_proveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.DataBase.Tables.Delivery", b =>
                {
                    b.HasOne("Data.DataBase.Tables.ClienteDireccion", null)
                        .WithOne()
                        .HasForeignKey("Data.DataBase.Tables.Delivery", "id_direccion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Data.DataBase.Tables.Estado", null)
                        .WithMany()
                        .HasForeignKey("id_estado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.DataBase.Tables.DetalleCompra", b =>
                {
                    b.HasOne("Data.DataBase.Tables.Compra", null)
                        .WithMany()
                        .HasForeignKey("id_compra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.DataBase.Tables.Producto", null)
                        .WithMany()
                        .HasForeignKey("id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.DataBase.Tables.DetalleVenta", b =>
                {
                    b.HasOne("Data.DataBase.Tables.Producto", null)
                        .WithMany()
                        .HasForeignKey("id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.DataBase.Tables.Venta", null)
                        .WithOne()
                        .HasForeignKey("Data.DataBase.Tables.DetalleVenta", "id_venta")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.DataBase.Tables.OrdenServicioTecnico", b =>
                {
                    b.HasOne("Data.DataBase.Tables.Cliente", null)
                        .WithMany()
                        .HasForeignKey("id_cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.DataBase.Tables.EmpleadoTecnico", null)
                        .WithMany()
                        .HasForeignKey("id_empleadoTecnico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.DataBase.Tables.Producto", b =>
                {
                    b.HasOne("Data.DataBase.Tables.Categoria", null)
                        .WithMany()
                        .HasForeignKey("id_categoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.DataBase.Tables.Usuario", b =>
                {
                    b.HasOne("Data.DataBase.Tables.Cliente", null)
                        .WithOne()
                        .HasForeignKey("Data.DataBase.Tables.Usuario", "id_cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.DataBase.Tables.Rol", null)
                        .WithMany()
                        .HasForeignKey("id_rol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.DataBase.Tables.Venta", b =>
                {
                    b.HasOne("Data.DataBase.Tables.Cliente", null)
                        .WithMany()
                        .HasForeignKey("id_cliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Data.DataBase.Tables.Delivery", null)
                        .WithOne()
                        .HasForeignKey("Data.DataBase.Tables.Venta", "id_delivery")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Data.DataBase.Tables.RecojoAlmacen", null)
                        .WithMany()
                        .HasForeignKey("id_recojoAlmacen")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Data.DataBase.Tables.TipoPago", null)
                        .WithOne()
                        .HasForeignKey("Data.DataBase.Tables.Venta", "id_tipoPago")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Data.DataBase.Tables.Vendedor", null)
                        .WithMany()
                        .HasForeignKey("id_vendedor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
