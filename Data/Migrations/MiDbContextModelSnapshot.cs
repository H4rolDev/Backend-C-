// <auto-generated />
using System;
using Data.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(MiDbContext))]
    partial class MiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.DataBase.Tables.Categoria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("categorias");

                    b.HasData(
                        new
                        {
                            id = 1,
                            nombre = "Computadoras"
                        },
                        new
                        {
                            id = 2,
                            nombre = "Laptops"
                        },
                        new
                        {
                            id = 3,
                            nombre = "Auriculares"
                        },
                        new
                        {
                            id = 4,
                            nombre = "Teclado"
                        },
                        new
                        {
                            id = 5,
                            nombre = "Componentes"
                        },
                        new
                        {
                            id = 6,
                            nombre = "Monitores"
                        });
                });

            modelBuilder.Entity("Data.DataBase.Tables.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("apellidoMaterno")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("apellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("user_id")
                        .IsUnique()
                        .HasFilter("[user_id] IS NOT NULL");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("Data.DataBase.Tables.Delivery", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EmpresaEnvio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("Telefono")
                        .HasColumnType("bigint");

                    b.Property<int>("estado_id")
                        .HasColumnType("int");

                    b.Property<int>("tipoEntrega_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("estado_id")
                        .IsUnique();

                    b.HasIndex("tipoEntrega_id")
                        .IsUnique();

                    b.ToTable("delivery");
                });

            modelBuilder.Entity("Data.DataBase.Tables.DetalleCompra", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("cantidadComprada")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("precioTotal")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("precioUnitario")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.Property<string>("producto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("proveedor_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("proveedor_id")
                        .IsUnique();

                    b.ToTable("detalleCompra");
                });

            modelBuilder.Entity("Data.DataBase.Tables.DetalleTrabajo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("empleadoTecnico_id")
                        .HasColumnType("int");

                    b.Property<int>("ordenServicioTecnico_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("empleadoTecnico_id");

                    b.HasIndex("ordenServicioTecnico_id");

                    b.ToTable("detalleTrabajo");
                });

            modelBuilder.Entity("Data.DataBase.Tables.DetalleVenta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("impuestos")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.Property<decimal>("preioUnitario")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.Property<int>("producto_id")
                        .HasColumnType("int");

                    b.Property<int>("venta_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("producto_id");

                    b.HasIndex("venta_id");

                    b.ToTable("detalleVenta");
                });

            modelBuilder.Entity("Data.DataBase.Tables.Devolucion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("detalleVenta_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaDevolucion")
                        .HasColumnType("datetime2");

                    b.Property<string>("motivoDevolucion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("id");

                    b.HasIndex("detalleVenta_id")
                        .IsUnique();

                    b.ToTable("devoluciones");
                });

            modelBuilder.Entity("Data.DataBase.Tables.Documento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("cliente_id")
                        .HasColumnType("int");

                    b.Property<int>("numeroDocumento")
                        .HasColumnType("int");

                    b.Property<int>("tipoDocumento_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("cliente_id");

                    b.HasIndex("tipoDocumento_id")
                        .IsUnique();

                    b.ToTable("documentos");
                });

            modelBuilder.Entity("Data.DataBase.Tables.EmpleadoTecnico", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("apellidoMaterno")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("apellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("empleadoTecnico");
                });

            modelBuilder.Entity("Data.DataBase.Tables.Estado", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("estados");
                });

            modelBuilder.Entity("Data.DataBase.Tables.MetodoPago", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tipoPago_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("tipoPago_id");

                    b.ToTable("metodoPago");
                });

            modelBuilder.Entity("Data.DataBase.Tables.OrdenServicioTecnico", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("cliente_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("horaFin")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("horaInicio")
                        .HasColumnType("time");

                    b.HasKey("id");

                    b.HasIndex("cliente_id");

                    b.ToTable("ordenServicioTecnico");
                });

            modelBuilder.Entity("Data.DataBase.Tables.Producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("categoria_id")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("garantia")
                        .HasColumnType("int");

                    b.Property<string>("imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("marca")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("modelo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("precio")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("categoria_id");

                    b.ToTable("productos");

                    b.HasData(
                        new
                        {
                            id = 1,
                            categoria_id = 1,
                            descripcion = "B550M, SSD M.2 1TB, RAM 16GB",
                            garantia = 2,
                            imagen = "https://www.impacto.com.pe/storage/pc/sm/171570984947559.jpg",
                            marca = "AMD",
                            modelo = "Ryzen 7 5700G",
                            precio = 3298.80m,
                            stock = 10
                        },
                        new
                        {
                            id = 2,
                            categoria_id = 1,
                            descripcion = "Tarjeta de Video RTX 3050, SSD M.2 1TB, RAM 16GB",
                            garantia = 2,
                            imagen = "https://www.impacto.com.pe/storage/pc/md/171589130599320.jpg",
                            marca = "Intel",
                            modelo = "Core I5 13400F",
                            precio = 2170.50m,
                            stock = 30
                        },
                        new
                        {
                            id = 3,
                            categoria_id = 1,
                            descripcion = "Tarjeta de Video RTX 3060TI, SSD M.2 1TB, RAM 32GB",
                            garantia = 2,
                            imagen = "https://www.impacto.com.pe/storage/pc/sm/171570984947559.jpg",
                            marca = "AMD",
                            modelo = "Ryzen 9 5900X",
                            precio = 4239.99m,
                            stock = 10
                        },
                        new
                        {
                            id = 4,
                            categoria_id = 1,
                            descripcion = "Tarjeta de Video RTX 4060, SSD M.2 1TB, RAM 32GB",
                            garantia = 2,
                            imagen = "https://www.impacto.com.pe/storage/pc/sm/171570984947559.jpg",
                            marca = "AMD",
                            modelo = "Ryzen 7 5700X",
                            precio = 4198.50m,
                            stock = 10
                        },
                        new
                        {
                            id = 5,
                            categoria_id = 3,
                            descripcion = "Con Microfono, Control De Volumen, Almohadillas Suaves",
                            garantia = 1,
                            imagen = "https://www.impacto.com.pe/storage/pc/md/171572299747960.jpg",
                            marca = "Logitech",
                            modelo = "Lightspeed Rgb G733 Gaming",
                            precio = 538.99m,
                            stock = 3
                        },
                        new
                        {
                            id = 6,
                            categoria_id = 3,
                            descripcion = "Inalambrico, Con Microfono, Control De Volumen, Almohadillas Suaves",
                            garantia = 1,
                            imagen = "https://www.impacto.com.pe/storage/products/sm/169099476727139.jpg",
                            marca = "Logitech",
                            modelo = "G Pro X Gaming",
                            precio = 638.99m,
                            stock = 3
                        },
                        new
                        {
                            id = 7,
                            categoria_id = 3,
                            descripcion = "Inalambrico, Necro C/gris, Gaming Surrow 7.1, C/microfono, Entrada Jack",
                            garantia = 1,
                            imagen = "https://www.impacto.com.pe/storage/products/sm/168867107289840.jpg",
                            marca = "Gambyte ",
                            modelo = "Dark Templar",
                            precio = 128.99m,
                            stock = 3
                        },
                        new
                        {
                            id = 8,
                            categoria_id = 3,
                            descripcion = "Inalambrico, Necro C/gris, Gaming Surrow 7.1, C/microfono, Entrada Jack",
                            garantia = 1,
                            imagen = "https://www.impacto.com.pe/storage/products/sm/168867107289840.jpg",
                            marca = "Gambyte ",
                            modelo = "Dark Templar",
                            precio = 128.99m,
                            stock = 3
                        },
                        new
                        {
                            id = 9,
                            categoria_id = 6,
                            descripcion = "Color Negro, Gaming 5.1, Bluetooth 5.0, Con Microfono, Control De Volumen, Almohadillas Suaves",
                            imagen = "https://www.impacto.com.pe/storage/products/sm/169099387290344.jpg",
                            marca = "Gambyte",
                            modelo = "Soul",
                            precio = 120.99m,
                            stock = 23
                        });
                });

            modelBuilder.Entity("Data.DataBase.Tables.Proveedor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("apellidoMaterno")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("apellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("proveedores");
                });

            modelBuilder.Entity("Data.DataBase.Tables.RecojoAlmacen", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("cliente_id")
                        .HasColumnType("int");

                    b.Property<string>("dni")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("estado_id")
                        .HasColumnType("int");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tipoEntrega_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("cliente_id");

                    b.HasIndex("estado_id")
                        .IsUnique();

                    b.HasIndex("tipoEntrega_id")
                        .IsUnique();

                    b.ToTable("recojoAlmacen");
                });

            modelBuilder.Entity("Data.DataBase.Tables.TipoDocumento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id");

                    b.ToTable("tipoDocumentos");
                });

            modelBuilder.Entity("Data.DataBase.Tables.TipoEntrega", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("horaFecha")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("tipoEntrega");
                });

            modelBuilder.Entity("Data.DataBase.Tables.TipoPago", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<decimal>("descripcion")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("id");

                    b.ToTable("tipoPago");
                });

            modelBuilder.Entity("Data.DataBase.Tables.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Data.DataBase.Tables.Vendedor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("apellidoMaterno")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("apellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("fechaContratacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("puesto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("vendedores");
                });

            modelBuilder.Entity("Data.DataBase.Tables.Venta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("cliente_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<string>("metodoEntrega")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("metodoPago_id")
                        .HasColumnType("int");

                    b.Property<string>("productos")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("totalVenta")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.Property<int>("vendedor_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("cliente_id");

                    b.HasIndex("metodoPago_id");

                    b.HasIndex("vendedor_id");

                    b.ToTable("ventas");
                });

            modelBuilder.Entity("Data.DataBase.Tables.Cliente", b =>
                {
                    b.HasOne("Data.DataBase.Tables.User", null)
                        .WithOne()
                        .HasForeignKey("Data.DataBase.Tables.Cliente", "user_id");
                });

            modelBuilder.Entity("Data.DataBase.Tables.Delivery", b =>
                {
                    b.HasOne("Data.DataBase.Tables.Estado", null)
                        .WithOne()
                        .HasForeignKey("Data.DataBase.Tables.Delivery", "estado_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.DataBase.Tables.TipoEntrega", null)
                        .WithOne()
                        .HasForeignKey("Data.DataBase.Tables.Delivery", "tipoEntrega_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.DataBase.Tables.DetalleCompra", b =>
                {
                    b.HasOne("Data.DataBase.Tables.Proveedor", null)
                        .WithOne()
                        .HasForeignKey("Data.DataBase.Tables.DetalleCompra", "proveedor_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.DataBase.Tables.DetalleTrabajo", b =>
                {
                    b.HasOne("Data.DataBase.Tables.EmpleadoTecnico", null)
                        .WithMany()
                        .HasForeignKey("empleadoTecnico_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.DataBase.Tables.OrdenServicioTecnico", null)
                        .WithMany()
                        .HasForeignKey("ordenServicioTecnico_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.DataBase.Tables.DetalleVenta", b =>
                {
                    b.HasOne("Data.DataBase.Tables.Producto", null)
                        .WithMany()
                        .HasForeignKey("producto_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.DataBase.Tables.Venta", null)
                        .WithMany()
                        .HasForeignKey("venta_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.DataBase.Tables.Devolucion", b =>
                {
                    b.HasOne("Data.DataBase.Tables.DetalleVenta", null)
                        .WithOne()
                        .HasForeignKey("Data.DataBase.Tables.Devolucion", "detalleVenta_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.DataBase.Tables.Documento", b =>
                {
                    b.HasOne("Data.DataBase.Tables.Cliente", null)
                        .WithMany()
                        .HasForeignKey("cliente_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.DataBase.Tables.TipoDocumento", null)
                        .WithOne()
                        .HasForeignKey("Data.DataBase.Tables.Documento", "tipoDocumento_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.DataBase.Tables.MetodoPago", b =>
                {
                    b.HasOne("Data.DataBase.Tables.TipoPago", null)
                        .WithMany()
                        .HasForeignKey("tipoPago_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.DataBase.Tables.OrdenServicioTecnico", b =>
                {
                    b.HasOne("Data.DataBase.Tables.Cliente", null)
                        .WithMany()
                        .HasForeignKey("cliente_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.DataBase.Tables.Producto", b =>
                {
                    b.HasOne("Data.DataBase.Tables.Categoria", null)
                        .WithMany()
                        .HasForeignKey("categoria_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.DataBase.Tables.RecojoAlmacen", b =>
                {
                    b.HasOne("Data.DataBase.Tables.Cliente", null)
                        .WithMany()
                        .HasForeignKey("cliente_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.DataBase.Tables.Estado", null)
                        .WithOne()
                        .HasForeignKey("Data.DataBase.Tables.RecojoAlmacen", "estado_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.DataBase.Tables.TipoEntrega", null)
                        .WithOne()
                        .HasForeignKey("Data.DataBase.Tables.RecojoAlmacen", "tipoEntrega_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.DataBase.Tables.Venta", b =>
                {
                    b.HasOne("Data.DataBase.Tables.Cliente", null)
                        .WithMany()
                        .HasForeignKey("cliente_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.DataBase.Tables.MetodoPago", null)
                        .WithMany()
                        .HasForeignKey("metodoPago_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.DataBase.Tables.Vendedor", null)
                        .WithMany()
                        .HasForeignKey("vendedor_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
